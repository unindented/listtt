{"version":3,"sources":["web-build/register-service-worker.js","App.tsx","__generated__/AppEntry.js"],"names":["navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console","AppContainer","App","colorScheme","useColorScheme","isDarkColorScheme","themeContainerStyle","styles","darkContainer","lightContainer","themeStatusBarStyle","themeTextStyle","darkThemeText","lightThemeText","themeSubtitleStyle","darkThemeSubtitle","lightThemeSubtitle","SafeAreaView","style","container","StatusBar","barStyle","Text","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","color","registerRootComponent"],"mappings":"gHAEI,kBAAmBA,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAASC,OAGdC,OAAM,SAASC,GACdC,QAAQH,KAAK,oCAAqCE,U,2GCA3CE,EANU,kBACvB,kBAAC,qBAAD,KACE,kBAAC,EAAD,QAMEC,EAAU,WACd,IAAMC,EAAcC,2BACdC,EAAoC,SAAhBF,EAEpBG,EAAsBD,EACxBE,EAAOC,cACPD,EAAOE,eACLC,EAAsBL,EACxB,gBACA,eACEM,EAAiBN,EACnBE,EAAOK,cACPL,EAAOM,eACLC,EAAqBT,EACvBE,EAAOQ,kBACPR,EAAOS,mBAEX,OACE,kBAACC,EAAA,EAAD,CAAcC,MAAO,CAACX,EAAOY,UAAWb,IACtC,kBAACc,EAAA,EAAD,CAAWC,SAAUX,IACrB,kBAACY,EAAA,EAAD,CAAMJ,MAAOP,GAAb,YACA,kBAACW,EAAA,EAAD,CAAMJ,MAAOJ,GAAb,iBAAgDX,KAKhDI,EAASgB,IAAWC,OAAO,CAC/BL,UAAW,CACTM,KAAM,EACNC,WAAY,SACZC,eAAgB,UAElBlB,eAAgB,CACdmB,gBAAiB,QAEnBpB,cAAe,CACboB,gBAAiB,WAEnBf,eAAgB,CACdgB,MAAO,WAETjB,cAAe,CACbiB,MAAO,WAETb,mBAAoB,CAClBa,MAAO,WAETd,kBAAmB,CACjBc,MAAO,aCjDXC,YAAsB5B,K","file":"static/js/app.30ea2689.chunk.js","sourcesContent":["/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","import React, { FC } from \"react\";\nimport { SafeAreaView, StatusBar, StyleSheet, Text } from \"react-native\";\nimport { AppearanceProvider, useColorScheme } from \"react-native-appearance\";\n\nconst AppContainer: FC = () => (\n  <AppearanceProvider>\n    <App />\n  </AppearanceProvider>\n);\n\nexport default AppContainer;\n\nconst App: FC = () => {\n  const colorScheme = useColorScheme();\n  const isDarkColorScheme = colorScheme === \"dark\";\n\n  const themeContainerStyle = isDarkColorScheme\n    ? styles.darkContainer\n    : styles.lightContainer;\n  const themeStatusBarStyle = isDarkColorScheme\n    ? \"light-content\"\n    : \"dark-content\";\n  const themeTextStyle = isDarkColorScheme\n    ? styles.darkThemeText\n    : styles.lightThemeText;\n  const themeSubtitleStyle = isDarkColorScheme\n    ? styles.darkThemeSubtitle\n    : styles.lightThemeSubtitle;\n\n  return (\n    <SafeAreaView style={[styles.container, themeContainerStyle]}>\n      <StatusBar barStyle={themeStatusBarStyle} />\n      <Text style={themeTextStyle}>Welcome!</Text>\n      <Text style={themeSubtitleStyle}>Color scheme: {colorScheme}</Text>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  lightContainer: {\n    backgroundColor: \"#fff\",\n  },\n  darkContainer: {\n    backgroundColor: \"#242424\",\n  },\n  lightThemeText: {\n    color: \"#303942\",\n  },\n  darkThemeText: {\n    color: \"#bdc6cf\",\n  },\n  lightThemeSubtitle: {\n    color: \"#808080\",\n  },\n  darkThemeSubtitle: {\n    color: \"#7f7f7f\",\n  },\n});\n","// @generated by expo-yarn-workspaces\n\nimport { registerRootComponent } from 'expo';\nimport { activateKeepAwake } from 'expo-keep-awake';\n\nimport App from '../App';\n\nif (__DEV__) {\n  activateKeepAwake();\n}\n\nregisterRootComponent(App);\n"],"sourceRoot":""}